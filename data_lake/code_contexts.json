{
    "code_context": [
      {
        "id": "context_001",
        "issue_title": "JWT token validation failing intermittently",
        "discussion": "Tokens appear valid but validation fails randomly around 15% of requests. Issue seems related to clock skew between auth-service and API gateway. Users getting 401 errors during peak hours, especially between 9-11 AM. Sarah noticed the pattern started over the weekend. Need to check token expiry logic and service time synchronization.",
        "locations": ["/src/auth/jwt_handler.py:45", "/src/middleware/auth.py:89"],
        "last_fixed": "2024-01-10",
        "fix_type": "token expiry logic adjustment",
        "time_spent_hours": 2.5,
        "assignee": "Aman Priyanshu",
        "status": "in_progress",
        "recurrence_count": 3,
        "created_by": "Sarah Johnson",
        "created_at": "2024-01-15T09:30:00Z"
      },
      {
        "id": "context_002", 
        "issue_title": "Found root cause in jwt_handler.py line 45",
        "discussion": "Deep dive debugging session revealed the issue. The token validation is using server local time instead of UTC for expiry checks. When system clock drifts even slightly, valid tokens get rejected. The datetime.now() call needs to be datetime.utcnow(). Also found that the clock skew tolerance is set to 0 seconds - should be at least 30s to handle network delays.",
        "locations": ["/src/auth/jwt_handler.py:45", "/src/auth/jwt_handler.py:67", "/src/utils/time_helpers.py:12"],
        "last_fixed": "2024-01-16",
        "fix_type": "logic bug fix",
        "time_spent_hours": 6.5,
        "assignee": "Alex Chen", 
        "status": "resolved",
        "recurrence_count": 1,
        "created_by": "Alex Chen",
        "created_at": "2024-01-16T19:00:00Z"
      },
      {
        "id": "context_003",
        "issue_title": "Implement JWT refresh token logic", 
        "discussion": "Adding refresh token functionality to prevent users from getting kicked out during long sessions. Need to implement token refresh endpoint, update frontend to handle token refresh, and add proper rotation logic. Tokens should refresh automatically 5 minutes before expiry. This came up during code review - security best practice to have shorter access token lifetimes.",
        "locations": ["/src/auth/jwt_handler.py:67", "/src/auth/refresh_service.py:23", "/src/api/auth_endpoints.py:156"],
        "last_fixed": null,
        "fix_type": "feature implementation",
        "time_spent_hours": 8.0,
        "assignee": "Alex Chen",
        "status": "in_progress", 
        "recurrence_count": 0,
        "created_by": "Sarah Johnson",
        "created_at": "2024-01-18T11:30:00Z"
      },
      {
        "id": "context_004",
        "issue_title": "Add rate limiting to auth endpoints",
        "discussion": "Security consultant Mike Thompson flagged that our auth endpoints are vulnerable to brute force attacks. Need to implement rate limiting on /login, /register, and /refresh endpoints. Suggested 5 attempts per minute per IP, with exponential backoff. Also need to add monitoring alerts for unusual auth patterns. High priority security hardening item.",
        "locations": ["/src/middleware/rate_limiter.py:34", "/src/api/auth_endpoints.py:23", "/config/security.yml:18"],
        "last_fixed": null,
        "fix_type": "security patch",
        "time_spent_hours": 4.0,
        "assignee": "John Martinez",
        "status": "planned",
        "recurrence_count": 0,
        "created_by": "Mike Thompson",
        "created_at": "2024-01-16T16:30:00Z"
      },
      {
        "id": "context_005",
        "issue_title": "Auth system incident - post-mortem tracking",
        "discussion": "Comprehensive tracking issue for the auth crisis that started Monday morning. Root cause was timezone handling in JWT validation causing ~15% of valid tokens to be rejected. Timeline: Crisis discovered 9:15 AM Mon, root cause found Tue evening by Alex, patches deployed Wed, full resolution Thu evening. Total impact: ~2000 affected user sessions, 3.2 days to resolve. Key learnings: need better monitoring on auth success rates, UTC time handling standards, faster escalation procedures.",
        "locations": ["/src/auth/jwt_handler.py:45", "/src/monitoring/auth_metrics.py:78", "/docs/incidents/auth_crisis_jan2024.md:1"],
        "last_fixed": "2024-01-19",
        "fix_type": "incident resolution",
        "time_spent_hours": 32.0,
        "assignee": "Aman Priyanshu",
        "status": "resolved",
        "recurrence_count": 1,
        "created_by": "Sarah Johnson", 
        "created_at": "2024-01-19T09:00:00Z"
      },
      {
        "id": "context_006",
        "issue_title": "Database connection pool exhaustion during peak traffic",
        "discussion": "Connection pool hitting max limit (20 connections) during lunch hours. Long-running queries not being properly closed in the dashboard API. Users experiencing 30+ second load times. Need to increase pool size and add connection timeout handling. This started happening more frequently after the user base grew by 40% last month.",
        "locations": ["/src/db/connection.py:67", "/config/database.yml:15", "/src/api/dashboard.py:89"],
        "last_fixed": "2024-01-12",
        "fix_type": "connection pooling optimization",
        "time_spent_hours": 4.5,
        "assignee": "Aman Priyanshu",
        "status": "resolved",
        "recurrence_count": 2,
        "created_by": "David Kim",
        "created_at": "2024-01-12T14:20:00Z"
      },
      {
        "id": "context_007",
        "issue_title": "Memory leak in WebSocket connection handler",
        "discussion": "Server memory usage climbing steadily over 24-48 hours, eventually hitting OOM. Profiling shows WebSocket connections not being properly garbage collected when clients disconnect unexpectedly. Need to add proper cleanup in connection_closed handler and implement heartbeat mechanism.",
        "locations": ["/src/websocket/handler.py:123", "/src/websocket/connection_manager.py:45"],
        "last_fixed": null,
        "fix_type": "memory optimization",
        "time_spent_hours": 7.0,
        "assignee": "Maria Rodriguez",
        "status": "in_progress",
        "recurrence_count": 1,
        "created_by": "Aman Priyanshu",
        "created_at": "2024-01-14T10:45:00Z"
      },
      {
        "id": "context_008",
        "issue_title": "React state management causing unnecessary re-renders",
        "discussion": "User dashboard components re-rendering excessively when user updates profile. Entire component tree re-renders instead of just affected components. Using React DevTools profiler, seeing 15+ unnecessary renders per state change. Need to implement proper memoization and split state more granularly.",
        "locations": ["/src/frontend/components/Dashboard.jsx:89", "/src/frontend/hooks/useUserProfile.js:34"],
        "last_fixed": "2024-01-11",
        "fix_type": "performance optimization",
        "time_spent_hours": 3.0,
        "assignee": "Alex Chen",
        "status": "resolved",
        "recurrence_count": 3,
        "created_by": "Alex Chen",
        "created_at": "2024-01-11T16:30:00Z"
      },
      {
        "id": "context_009",
        "issue_title": "CI pipeline randomly failing on integration tests",
        "discussion": "Integration tests pass locally but fail randomly in CI ~30% of the time. Usually timeouts on database setup or race conditions in test data cleanup. Tests are dependent on each other and not properly isolated. Need to add proper test isolation and increase timeouts for CI environment.",
        "locations": ["/tests/integration/test_api.py:156", "/tests/fixtures/db_setup.py:23", "/.github/workflows/ci.yml:45"],
        "last_fixed": "2024-01-08",
        "fix_type": "test infrastructure fix",
        "time_spent_hours": 5.5,
        "assignee": "John Martinez",
        "status": "resolved",
        "recurrence_count": 4,
        "created_by": "John Martinez",
        "created_at": "2024-01-08T11:15:00Z"
      },
      {
        "id": "context_010",
        "issue_title": "Third-party payment API returning 500 errors",
        "discussion": "Stripe webhook endpoints returning 500 errors intermittently, causing payment confirmations to fail. Users not getting confirmation emails and subscription status not updating. Stripe support says issue is on our end - webhook handler not responding within 10 second timeout. Need to optimize webhook processing and add retry logic.",
        "locations": ["/src/payments/stripe_webhooks.py:78", "/src/payments/subscription_handler.py:134"],
        "last_fixed": null,
        "fix_type": "integration fix",
        "time_spent_hours": 6.0,
        "assignee": "Sarah Johnson",
        "status": "in_progress",
        "recurrence_count": 2,
        "created_by": "Lisa Wong",
        "created_at": "2024-01-17T09:45:00Z"
      },
      {
        "id": "context_011",
        "issue_title": "Email service queue backing up during high volume",
        "discussion": "Email queue growing faster than processing during marketing campaigns. 10k+ emails stuck in queue, users not receiving password reset emails within reasonable time. Redis queue hitting memory limits. Need to implement batch processing and scale email workers horizontally.",
        "locations": ["/src/email/queue_processor.py:67", "/src/email/smtp_handler.py:23", "/config/redis.yml:12"],
        "last_fixed": "2024-01-13",
        "fix_type": "scalability improvement",
        "time_spent_hours": 4.0,
        "assignee": "David Kim",
        "status": "resolved",
        "recurrence_count": 1,
        "created_by": "Maria Rodriguez",
        "created_at": "2024-01-13T08:30:00Z"
      },
      {
        "id": "context_012",
        "issue_title": "Mobile app crashes on iOS 17.2 with search functionality",
        "discussion": "React Native app crashing consistently when users type in search bar on iOS 17.2+. Works fine on Android and older iOS versions. Stack trace points to keyboard handling in search component. Apple changed keyboard behavior in 17.2. Need to update keyboard avoidance logic.",
        "locations": ["/src/mobile/components/SearchBar.tsx:45", "/src/mobile/utils/keyboard_utils.ts:89"],
        "last_fixed": null,
        "fix_type": "compatibility fix",
        "time_spent_hours": 8.5,
        "assignee": "Alex Chen",
        "status": "in_progress",
        "recurrence_count": 0,
        "created_by": "Sarah Johnson",
        "created_at": "2024-01-16T14:20:00Z"
      },
      {
        "id": "context_013",
        "issue_title": "SQL injection vulnerability in search endpoint",
        "discussion": "Security scan flagged potential SQL injection in user search functionality. Raw user input being concatenated into SQL query instead of using parameterized queries. High severity security issue that needs immediate patching. Surprised this passed code review initially.",
        "locations": ["/src/api/search.py:134", "/src/db/queries.py:67"],
        "last_fixed": "2024-01-09",
        "fix_type": "security patch",
        "time_spent_hours": 2.0,
        "assignee": "John Martinez",
        "status": "resolved",
        "recurrence_count": 0,
        "created_by": "Mike Thompson",
        "created_at": "2024-01-09T13:45:00Z"
      },
      {
        "id": "context_014",
        "issue_title": "Data migration script failing on production dataset",
        "discussion": "Migration script that worked fine on staging is timing out on production with 2M+ records. Script tries to update all records in single transaction, hitting database timeout limits. Need to implement batched processing with progress tracking and rollback capability.",
        "locations": ["/migrations/20240115_user_profile_update.py:89", "/src/db/migration_utils.py:45"],
        "last_fixed": null,
        "fix_type": "migration optimization",
        "time_spent_hours": 12.0,
        "assignee": "Aman Priyanshu",
        "status": "blocked",
        "recurrence_count": 1,
        "created_by": "David Kim",
        "created_at": "2024-01-15T16:00:00Z"
      },
      {
        "id": "context_015",
        "issue_title": "File upload progress bar not updating correctly",
        "discussion": "Progress bar jumps from 0% to 100% instantly instead of showing gradual progress. XMLHttpRequest progress events not being handled properly. Users think uploads are stuck and cancel them prematurely. Need to fix progress event handling and add better visual feedback.",
        "locations": ["/src/frontend/components/FileUpload.jsx:78", "/src/frontend/services/upload_service.js:123"],
        "last_fixed": "2024-01-14",
        "fix_type": "UI bug fix",
        "time_spent_hours": 1.5,
        "assignee": "Maria Rodriguez",
        "status": "resolved",
        "recurrence_count": 2,
        "created_by": "Alex Chen",
        "created_at": "2024-01-14T11:30:00Z"
      },
      {
        "id": "context_016",
        "issue_title": "Docker container startup time increased 300% after dependency update",
        "discussion": "Container startup went from 15 seconds to 45+ seconds after updating Python dependencies. Dockerfile now pulls and compiles more packages from source instead of using wheels. Need to optimize Docker build process and possibly pin to specific package versions with pre-built wheels.",
        "locations": ["/Dockerfile:23", "/requirements.txt:45", "/docker-compose.yml:34"],
        "last_fixed": null,
        "fix_type": "build optimization",
        "time_spent_hours": 3.5,
        "assignee": "David Kim",
        "status": "in_progress",
        "recurrence_count": 0,
        "created_by": "John Martinez",
        "created_at": "2024-01-18T10:15:00Z"
      },
      {
        "id": "context_017",
        "issue_title": "Caching layer returning stale data after user updates",
        "discussion": "Redis cache not invalidating properly when users update their profiles. Users see old profile data for 5-10 minutes after making changes. Cache invalidation logic missing in profile update endpoint. Need to add proper cache busting and implement cache versioning strategy.",
        "locations": ["/src/cache/redis_client.py:89", "/src/api/profile.py:156", "/src/utils/cache_utils.py:34"],
        "last_fixed": "2024-01-10",
        "fix_type": "caching logic fix",
        "time_spent_hours": 2.5,
        "assignee": "Aman Priyanshu",
        "status": "resolved",
        "recurrence_count": 3,
        "created_by": "Sarah Johnson",
        "created_at": "2024-01-10T15:20:00Z"
      },
      {
        "id": "context_018",
        "issue_title": "Monitoring alerts triggering false positives during deploy",
        "discussion": "Every deployment triggers 'Service Unavailable' alerts even though rolling deployment should have zero downtime. Health check endpoints returning 503 during brief window when new containers are starting up. Need to adjust health check timing and alert thresholds.",
        "locations": ["/src/health/health_check.py:23", "/config/monitoring.yml:67", "/k8s/deployment.yml:89"],
        "last_fixed": "2024-01-12",
        "fix_type": "monitoring configuration",
        "time_spent_hours": 1.0,
        "assignee": "David Kim",
        "status": "resolved",
        "recurrence_count": 5,
        "created_by": "David Kim",
        "created_at": "2024-01-12T09:45:00Z"
      },
      {
        "id": "context_019",
        "issue_title": "Unit tests breaking due to timezone assumptions",
        "discussion": "Test suite failing in CI but passing locally. Tests assume PST timezone but CI runs in UTC. Date/time assertions failing because of timezone differences. Need to mock timezone in tests and ensure all time-based tests use UTC. Related to the JWT timezone issue we just fixed.",
        "locations": ["/tests/unit/test_auth.py:134", "/tests/unit/test_utils.py:67", "/tests/conftest.py:23"],
        "last_fixed": null,
        "fix_type": "test reliability fix",
        "time_spent_hours": 2.0,
        "assignee": "Alex Chen",
        "status": "planned",
        "recurrence_count": 1,
        "created_by": "Alex Chen",
        "created_at": "2024-01-19T14:30:00Z"
      },
      {
        "id": "context_020",
        "issue_title": "API response times degrading with database growth",
        "discussion": "User listing endpoint taking 3+ seconds to respond, up from ~200ms last month. Database has grown to 500k+ users. Missing indexes on frequently queried columns. Query execution plan shows full table scans. Need to add proper indexing strategy and implement pagination.",
        "locations": ["/src/api/users.py:89", "/src/db/models.py:45", "/migrations/add_user_indexes.sql:1"],
        "last_fixed": null,
        "fix_type": "database optimization",
        "time_spent_hours": 6.0,
        "assignee": "John Martinez",
        "status": "in_progress",
        "recurrence_count": 1,
        "created_by": "Lisa Wong",
        "created_at": "2024-01-18T16:45:00Z"
      }
    ]
  }